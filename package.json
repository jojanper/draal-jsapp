{
  "name": "draal-jsapp",
  "version": "0.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/jojanper/draal-jsapp.git"
  },
  "bugs": {
    "url": "https://github.com/jojanper/draal-jsapp/issues"
  },
  "license": "MIT",
  "main": "app.js",
  "scripts": {
    "cibuild": "npm run lint && npm test",
    "codecov": "codecov --disable=gcov --root=./coverage",
    "docker-build": "docker-compose build",
    "docker-run": "docker-compose up",
    "docker-rund": "docker-compose up -d",
    "docker-stop": "docker stop draaljs",
    "docker-rm": "docker rm draaljs",
    "docker-stop-webserver": "docker stop nginx",
    "docker-rm-webserver": "docker rm nginx",
    "ngapp-prepare": "rm -Rf angular-app/dist && mkdir angular-app/dist && mkdir angular-app/dist/css && mkdir angular-app/dist/js",
    "fullstack-dev": "npm run ngapp-prepare && concurrently --names backend,frontend,template \"npm start\" \"cd angular-app && npm run watch\" \"npm run client-watch\"",
    "fullstack-prod": "npm run ngapp-prepare && concurrently --names backend,frontend,template \"npm start\" \"cd angular-app && npm run watch-prod\" \"npm run client-watch\"",
    "lint": "eslint *.js ./config/*.js ./src/** ./test/**",
    "start": "NODE_PATH=$NODE_PATH:. DEBUG=draal-jsapp:* nodemon ./app.js -e .js",
    "start-prod": "NODE_PATH=$NODE_PATH:. NODE_ENV=production node ./app.js",
    "pretest": "rimraf unit-test-logs && mongo draaljs-test --eval \"db.dropDatabase()\"",
    "test": "NODE_PATH=$NODE_PATH:. NODE_ENV=test MONGODB_URI=mongodb://localhost:27017/draaljs-test nyc mocha",
    "client-install": "git clone https://github.com/jojanper/angular-app.git && cd angular-app && npm i",
    "client-build": "rimraf public && mkdir public && cp -r angular-app/dist/* public/ && rm -f public/index.html && npm run client-template",
    "client-template": "node scripts/build_template",
    "client-watch": "nodemon --watch ./angular-app/dist/ --delay 250ms --exec 'npm run client-build'",
    "virtualenv-install": "node scripts/virtualenv",
    "pip-install": "pip install -U pip setuptools && npm run pypackages-install",
    "pypackages-install": "pip install -r requirements.txt",
    "pylint": "flake8 --config=.flake8 -v pytasks",
    "pytests": "nose2 -s . -v --with-coverage --coverage-report term-missing --coverage pytasks"
  },
  "dependencies": {
    "bcrypt": "1.0.3",
    "body-parser": "^1.18.2",
    "chalk": "^2.3.0",
    "commander": "^2.13.0",
    "connect-mongo": "^2.0.1",
    "cookie-parser": "^1.4.3",
    "dotenv": "^4.0.0",
    "express": "^4.16.2",
    "express-session": "^1.15.6",
    "express-validator": "^4.3.0",
    "helmet": "^3.10.0",
    "mongoose": "^5.0.1",
    "morgan": "^1.9.0",
    "node-celery": "^0.2.8",
    "passport": "^0.4.0",
    "passport-local": "^1.0.0",
    "prettyjson": "^1.2.1",
    "pug": "^2.0.0-rc.4",
    "socket.io": "~2.0.4",
    "winston": "^3.0.0-rc1"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "codecov": "^3.0.0",
    "concurrently": "^3.5.0",
    "eslint": "^4.16.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "eslint-plugin-import": "^2.7.0",
    "istanbul": "^0.4.5",
    "minimist": "latest",
    "mocha": "^5.0.0",
    "nodemon": "^1.12.1",
    "nyc": "^11.4.0",
    "rimraf": "^2.6.2",
    "shelljs": "^0.8.1",
    "sinon": "^4.2.0",
    "sinon-mongoose": "^2.0.2",
    "supertest": "^3.0.0"
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "comma-dangle": 0,
      "consistent-return": 0,
      "no-param-reassign": 0,
      "no-underscore-dangle": 0,
      "no-shadow": 0,
      "no-console": 0,
      "no-plusplus": 0,
      "object-curly-spacing": 0,
      "indent": [
        "error",
        4
      ],
      "import/no-extraneous-dependencies": [
        0
      ],
      "import/no-unresolved": [
        0
      ]
    },
    "env": {
      "node": true,
      "mocha": true
    },
    "globals": {
      "chai": true,
      "expect": true,
      "testapp": true,
      "testrunner": true,
      "appTestHelper": true,
      "socketClient": true
    }
  },
  "nyc": {
    "include": [
      "src",
      "config",
      "app.js"
    ],
    "exclude": "**/*.spec.js",
    "reporter": [
      "text",
      "text-summary",
      "lcovonly"
    ]
  },
  "engines": {
    "node": ">= 8.9.0"
  }
}

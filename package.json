{
  "name": "draaljsapp",
  "version": "0.0.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/jojanper/draal-jsapp.git"
  },
  "bugs": {
    "url": "https://github.com/jojanper/draal-jsapp/issues"
  },
  "license": "MIT",
  "main": "main.js",
  "productName": "Draal UI with Node",
  "description": "Draal UI with Node",
  "scripts": {
    "app-update": "npm run git-update && npm i --production",
    "commands": "node commands",
    "debian-install": "electron-installer-debian --src builds/draaljsapp-linux-x64/ --arch amd64 --config config/electron/debian.json",
    "dev-start": "pm2 start pm2.config.js --env production --only draaljsapp-dev",
    "dev-stop": "pm2 stop draaljsapp-dev",
    "dmg-install": "electron-installer-dmg builds/draaljsapp-darwin-x64/draaljsapp.app draaljsapp --out=./builds --overwrite --icon='./config/electron/favicon.icns'",
    "git-update": "git fetch origin && git checkout master && git reset --hard origin/master",
    "osx-install": "npm run zip-app -- --folder=builds/draaljsapp-darwin-x64",
    "start:electron": "electron .",
    "pack-app": "npm run commands -- pack-app",
    "pack-app:linux": "npm run pack-app && npm run debian-install",
    "pack-app:osx": "npm run pack-app -- --platform=osx",
    "pack-app:osx-dmg": "npm run pack-app -- --platform=osx && npm run dmg-install",
    "pack-app:win": "npm run pack-app -- --platform=win",
    "prod-monitor": "pm2 monit",
    "prod-upgrade": "npm run prod-stop && npm run app-update && npm run prod-start",
    "prod-status": "pm2 list",
    "prod-start": "pm2 start pm2.config.js --env production --only draaljsapp",
    "prod-stop": "pm2 stop draaljsapp",
    "windows-install": "npm run zip-app -- --folder=builds/draaljsapp-win32-x64",
    "zip-app": "npm run commands -- zip-app",
    "cibuild": "npm run lint && npm test",
    "codecov": "codecov --disable=gcov --root=./coverage",
    "docker-build": "npm run app-tarball && docker-compose build",
    "docker-build-aws": "npm run app-tarball && docker-compose -f docker-compose-aws.yml build",
    "docker-build-prod": "npm run app-tarball && docker-compose -f docker-compose.yml build",
    "docker-run": "docker-compose up",
    "docker-rund": "docker-compose up -d",
    "docker-stop": "docker stop draaljs",
    "docker-rm": "docker rm draaljs",
    "docker-stop-webserver": "docker stop nginx",
    "docker-rm-webserver": "docker rm nginx",
    "ngapp-prepare": "rimraf angular-app/dist && mkdir -p angular-app/dist && mkdir -p public/frontend",
    "fullstack-dev": "npm run ngapp-prepare && concurrently --names backend,frontend,template \"npm start\" \"cd angular-app && npm run dev-watch -- --deploy-url /frontend/\" \"npm run client-watch\"",
    "fullstack-prod": "npm run ngapp-prepare && concurrently --names backend,frontend,template \"npm start\" \"cd angular-app && npm run prod-watch -- --deploy-url /frontend/\" \"npm run client-watch\"",
    "lint": "eslint *.js ./config/*.js ./src/** ./test/** ./commands/**",
    "start": "NODE_PATH=$NODE_PATH:. DEBUG=draal-jsapp:* nodemon ./app.js -e .js",
    "start-prod": "NODE_PATH=$NODE_PATH:. NODE_ENV=production node ./app.js",
    "pretest": "rimraf unit-test-logs && mongo draaljs-test --eval \"db.dropDatabase()\"",
    "test": "NODE_PATH=$NODE_PATH:. NODE_ENV=test MONGODB_URI=mongodb://localhost:27017/draaljs-test nyc ./node_modules/mocha/bin/mocha -u bdd",
    "client-install": "git clone https://github.com/jojanper/angular-app.git && cd angular-app && npm i",
    "client-build": "npm run client-copy & npm run client-template",
    "client-template": "npm run commands -- build-template --html=public/frontend/index.html --favicon=frontend",
    "client-watch": "nodemon --watch angular-app/dist/ --delay 2500ms --exec 'npm run client-build'",
    "virtualenv-install": "npm run commands -- virtualenv",
    "pip-install": "pip install -U pip setuptools && npm run pypackages-install",
    "pypackages-install": "pip install -r requirements.txt",
    "pylint": "flake8 --config=.flake8 -v pytasks",
    "pytests": "nose2 -s . -v --with-coverage --coverage-report term-missing --coverage pytasks",
    "app-tarball": "bash config/app/tarball.sh",
    "ng-client-copy": "rm -Rf public/frontend/* & cp -r -u angular-app/dist/* public/frontend/",
    "ng-build-prod": "cd angular-app && npm run build -- --delete-output-path=true && cd ..",
    "ng-app-prod": "npm run ng-build-prod && npm run ng-client-copy",
    "ng-build-prod-frontend": "cd angular-app && npm run build -- --delete-output-path=true --deploy-url /frontend/",
    "ng-app-prod-frontend": "npm run ng-build-prod-frontend && npm run ng-client-copy && npm run client-template"
  },
  "dependencies": {
    "bcrypt": "4.0.1",
    "body-parser": "^1.19.0",
    "compression": "^1.7.4",
    "chalk": "^3.0.0",
    "connect-mongo": "^3.2.0",
    "cookie-parser": "^1.4.5",
    "dotenv": "^8.2.0",
    "electron-is-dev": "^1.2.0",
    "express": "^4.17.1",
    "express-session": "^1.17.0",
    "express-validator": "^6.4.0",
    "formidable": "^1.2.2",
    "graphql": "^0.13.2",
    "graphql-server-express": "^1.4.1",
    "graphql-tools": "^2.24.0",
    "helmet": "^3.22.0",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.9.7",
    "morgan": "^1.10.0",
    "node-celery": "^0.2.8",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "prettyjson": "^1.2.1",
    "pug": "^2.0.4",
    "socket.io": "^2.3.0",
    "temp-dir": "^2.0.0",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "codecov": "^3.7.1",
    "commander": "^5.0.0",
    "concurrently": "^5.1.0",
    "electron": "^9.0.3",
    "electron-packager": "^14.2.1",
    "electron-installer-debian": "^3.0.0",
    "electron-installer-dmg": "^3.0.0",
    "electron-winstaller": "^4.0.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-plugin-import": "^2.20.2",
    "htmlparser2": "^4.1.0",
    "istanbul": "^0.4.5",
    "minimist": "latest",
    "mocha": "^6.2.3",
    "nodemon": "^2.0.2",
    "nyc": "^15.0.0",
    "rimraf": "^3.0.2",
    "shelljs": "^0.8.3",
    "sinon": "^7.5.0",
    "sinon-mongoose": "^2.3.0",
    "supertest": "^4.0.2"
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "arrow-parens": [
        "error",
        "as-needed"
      ],
      "comma-dangle": 0,
      "consistent-return": 0,
      "no-param-reassign": 0,
      "no-underscore-dangle": 0,
      "no-shadow": 0,
      "no-console": 0,
      "no-plusplus": 0,
      "object-curly-spacing": 0,
      "max-classes-per-file": 0,
      "indent": [
        "error",
        4,
        {
          "SwitchCase": 1
        }
      ],
      "import/no-extraneous-dependencies": [
        0
      ],
      "import/no-unresolved": [
        0
      ]
    },
    "env": {
      "node": true,
      "mocha": true
    },
    "globals": {
      "chai": true,
      "expect": true,
      "testapp": true,
      "testrunner": true,
      "appTestHelper": true,
      "socketClient": true
    }
  },
  "nyc": {
    "include": [
      "src",
      "config",
      "app.js"
    ],
    "exclude": "**/*.spec.js",
    "reporter": [
      "text",
      "text-summary",
      "lcovonly"
    ]
  },
  "engines": {
    "node": ">= 12.0.0"
  }
}
